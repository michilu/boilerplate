// Code generated by protoc-gen-go. DO NOT EDIT.
// source: infra/keyvalue/message.proto

package keyvalue

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// KeyValue is Entity.
type KeyValue struct {
	Key                  []byte   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                []byte   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KeyValue) Reset()         { *m = KeyValue{} }
func (m *KeyValue) String() string { return proto.CompactTextString(m) }
func (*KeyValue) ProtoMessage()    {}
func (*KeyValue) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f657ce20e404ccd, []int{0}
}

func (m *KeyValue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KeyValue.Unmarshal(m, b)
}
func (m *KeyValue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KeyValue.Marshal(b, m, deterministic)
}
func (m *KeyValue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KeyValue.Merge(m, src)
}
func (m *KeyValue) XXX_Size() int {
	return xxx_messageInfo_KeyValue.Size(m)
}
func (m *KeyValue) XXX_DiscardUnknown() {
	xxx_messageInfo_KeyValue.DiscardUnknown(m)
}

var xxx_messageInfo_KeyValue proto.InternalMessageInfo

func (m *KeyValue) GetKey() []byte {
	if m != nil {
		return m.Key
	}
	return nil
}

func (m *KeyValue) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

// Prefix is ValueObject.
type Prefix struct {
	Prefix               []byte   `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Prefix) Reset()         { *m = Prefix{} }
func (m *Prefix) String() string { return proto.CompactTextString(m) }
func (*Prefix) ProtoMessage()    {}
func (*Prefix) Descriptor() ([]byte, []int) {
	return fileDescriptor_7f657ce20e404ccd, []int{1}
}

func (m *Prefix) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Prefix.Unmarshal(m, b)
}
func (m *Prefix) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Prefix.Marshal(b, m, deterministic)
}
func (m *Prefix) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Prefix.Merge(m, src)
}
func (m *Prefix) XXX_Size() int {
	return xxx_messageInfo_Prefix.Size(m)
}
func (m *Prefix) XXX_DiscardUnknown() {
	xxx_messageInfo_Prefix.DiscardUnknown(m)
}

var xxx_messageInfo_Prefix proto.InternalMessageInfo

func (m *Prefix) GetPrefix() []byte {
	if m != nil {
		return m.Prefix
	}
	return nil
}

func init() {
	proto.RegisterType((*KeyValue)(nil), "michilu.boilerplate.infra.keyvalue.KeyValue")
	proto.RegisterType((*Prefix)(nil), "michilu.boilerplate.infra.keyvalue.Prefix")
}

func init() { proto.RegisterFile("infra/keyvalue/message.proto", fileDescriptor_7f657ce20e404ccd) }

var fileDescriptor_7f657ce20e404ccd = []byte{
	// 202 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xc9, 0xcc, 0x4b, 0x2b,
	0x4a, 0xd4, 0xcf, 0x4e, 0xad, 0x2c, 0x4b, 0xcc, 0x29, 0x4d, 0xd5, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e,
	0x4c, 0x4f, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0xca, 0xcd, 0x4c, 0xce, 0xc8, 0xcc,
	0x29, 0xd5, 0x4b, 0xca, 0xcf, 0xcc, 0x49, 0x2d, 0x2a, 0xc8, 0x49, 0x2c, 0x49, 0xd5, 0x03, 0xeb,
	0xd0, 0x83, 0xe9, 0x90, 0x32, 0x4b, 0xcf, 0x2c, 0xc9, 0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5,
	0xcf, 0x2d, 0xcf, 0x2c, 0xc9, 0xce, 0x2f, 0xd7, 0x4f, 0xcf, 0xd7, 0x05, 0x1b, 0xa0, 0x5b, 0x96,
	0x98, 0x93, 0x99, 0x92, 0x58, 0x92, 0x5f, 0x54, 0xac, 0x0f, 0x67, 0x42, 0xcc, 0x56, 0x72, 0xe2,
	0xe2, 0xf0, 0x4e, 0xad, 0x0c, 0x03, 0x99, 0x21, 0x24, 0xc1, 0xc5, 0x9c, 0x9d, 0x5a, 0x29, 0xc1,
	0xa8, 0xc0, 0xa8, 0xc1, 0xe3, 0xc4, 0xf6, 0xe8, 0xbe, 0x3c, 0x53, 0x01, 0x43, 0x10, 0x48, 0x48,
	0x48, 0x86, 0x8b, 0x15, 0x6c, 0x8d, 0x04, 0x13, 0x8a, 0x1c, 0x44, 0x50, 0x49, 0x83, 0x8b, 0x2d,
	0xa0, 0x28, 0x35, 0x2d, 0xb3, 0x42, 0x48, 0x8e, 0x8b, 0xad, 0x00, 0xcc, 0x42, 0x33, 0x04, 0x2a,
	0xea, 0xc4, 0x15, 0xc5, 0x01, 0x73, 0x71, 0x12, 0x1b, 0xd8, 0x01, 0xc6, 0x80, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xcb, 0x79, 0xed, 0x38, 0xfc, 0x00, 0x00, 0x00,
}
