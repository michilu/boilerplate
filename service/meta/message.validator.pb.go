// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: message.proto

package meta

import (
	fmt "fmt"
	math "math"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/mwitkow/go-proto-validators"
	github_com_mwitkow_go_proto_validators "github.com/mwitkow/go-proto-validators"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

func (this *Meta) Validate() error {
	if this.Name == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Name", fmt.Errorf(`value '%v' must not be an empty string`, this.Name))
	}
	if this.Semver == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Semver", fmt.Errorf(`value '%v' must not be an empty string`, this.Semver))
	}
	if this.Channel == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Channel", fmt.Errorf(`value '%v' must not be an empty string`, this.Channel))
	}
	if nil == this.Runtime {
		return github_com_mwitkow_go_proto_validators.FieldError("Runtime", fmt.Errorf("message must exist"))
	}
	if this.Runtime != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Runtime); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Runtime", err)
		}
	}
	if this.Vcs != nil {
		if err := github_com_mwitkow_go_proto_validators.CallValidatorIfExists(this.Vcs); err != nil {
			return github_com_mwitkow_go_proto_validators.FieldError("Vcs", err)
		}
	}
	return nil
}
func (this *Runtime) Validate() error {
	if this.Version == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Version", fmt.Errorf(`value '%v' must not be an empty string`, this.Version))
	}
	if this.Arch == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Arch", fmt.Errorf(`value '%v' must not be an empty string`, this.Arch))
	}
	if this.Os == "" {
		return github_com_mwitkow_go_proto_validators.FieldError("Os", fmt.Errorf(`value '%v' must not be an empty string`, this.Os))
	}
	return nil
}
func (this *Vcs) Validate() error {
	return nil
}
